<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OcTuxf8DC6VpuHtPbYYAAAAASUVORK5CYII=
</value>
  </data>
</root>